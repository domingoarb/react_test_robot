{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorHandler.js","components/CounterButton.js","components/Header.js","containers/App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["initialStateSearch","searchField","initialStateRobots","robots","isPending","Card","id","name","email","className","src","alt","CardList","console","log","map","usuario","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorHandler","state","hasError","error","info","this","setState","Component","CounterButton","updateCounter","count","nextProps","nextState","color","onClick","Header","App","onRequestRobots","onSearchChange","filteredrobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","res","json","data","catch","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","Object","assign","errors","store","createLogger","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9648e990.chunk.js","sourcesContent":["import { \n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCES,\n\tREQUEST_ROBOTS_FAILED\n}\nfrom './constants';\n\nconst initialStateSearch = {\n\tsearchField:'',\n}\n\nconst initialStateRobots = {\n\trobots : [],\n\tisPending:true\n}\n\nexport const searchRobots = (state = initialStateSearch, action={})=>{\n\tswitch (action.type){\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({},state, {searchField:action.payload}) ;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const requestRobots = (state = initialStateRobots, action={})=>{\n\tswitch (action.type){\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn Object.assign({},state, {isPending:true}) ;\n\t\tcase REQUEST_ROBOTS_SUCCES:\n\t\t\treturn Object.assign({},state, {robots:action.payload, isPending:false}) ;\t\t\t\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn Object.assign({},state, {errors:action.payload, isPending:false}) ;\t\t\t\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React from 'react';\n\nconst Card = ({id, name, email}) => {\n  return (\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw1' >\n      <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\n      <div className=\"tc\">\n        <div>{name}</div>\n        <div>{email}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({robots}) => {\n\t console.log('CardList');\n  return (\n    <div>\n\t\t\t{\t\t\t\n\t\t\t\trobots.map((usuario, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\temail={robots[i].email}/>\n\t\t\t\t)})\n\t\t\t}\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\t\t\tconsole.log('SearchBox');\n\treturn(\n\n\t\t<div className=\"pa2\">\n\t\t\t<input \n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\t\ttype=\"search\" \n\t\t\t\tplaceholder=\"Buscar robot\"\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll =  (props) => {\n\treturn (\n\t\t<div style={{overflow:'scroll', border:'5px solid black', height:'800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorHandler extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state  = {\n\t\t\thasError : false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({hasError : true})\n\t}\n\n\trender(){\n\t\treturn (this.state.hasError) ? <h1>Opps algo sucedio</h1> :\n\t\t\tthis.props.children;\n\t}\n}\n\nexport default ErrorHandler;","import React, { Component } from 'react';\n\nclass CounterButton extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcount:0\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState){\n\t\treturn (this.state.count !== nextState.count) ? true : false;\n\t}\n\n\tupdateCounter = () =>{\n\t\tthis.setState({ count : this.state.count + 1})\n\t}\n\n\trender(){\n\n\t\tconsole.log('CounterButton');\n\t  return(\n\t\t\t\t<button color={this.props.color} onClick={this.updateCounter}>Cuenta: {this.state.count}</button> \n  \t\t);\n\t}\n}\n\nexport default CounterButton;\n","import React, { Component } from 'react';\nimport CounterButton from './CounterButton'\n\n\nclass Header extends Component{\n\trender(){\n\t\tconsole.log('Header');\n\t  return(\n\t  \t<div>\n\t\t\t\t<h1 className='f1'>RobotFriend</h1>\n\t\t\t\t<CounterButton color=\"green\" />\n\t\t\t</div>\n  \t\t);\n\t}\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport { connect  } from 'react-redux';\n\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorHandler from '../components/ErrorHandler';\nimport Header from '../components/Header';\nimport {setSearchField, requestRobots} from '../actions';\n\nimport './App.css';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots : state.requestRobots.robots,\n\t\tisPending : state.requestRobots.isPending,\n\t\terror : state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots: ()=> dispatch(requestRobots())\n\t}\n}\n\n\nclass App extends Component\n{\n\tcomponentDidMount(){\n\t\tthis.props.onRequestRobots();\n\t}\n\n\trender()\n\t{\n\t\tconst { searchField, onSearchChange, robots, isPending }= this.props;\n\t\tconst filteredrobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t});\n\n\t\treturn (isPending) ? (<h1>Cargando data</h1>) : \n\t\t\t(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorHandler>\n\t\t\t\t\t\t\t<CardList robots={filteredrobots}/>\n\t\t\t\t\t\t</ErrorHandler>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t\t);\t\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { \n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCES,\n\tREQUEST_ROBOTS_FAILED,\n }from './constants';\n\nexport const setSearchField = (text) => ({\n\ttype: CHANGE_SEARCH_FIELD,\n\tpayload: text,\n})\n\nexport const requestRobots = () => (dispatch) => {\n\tdispatch({type: REQUEST_ROBOTS_PENDING});\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(res => res.json())\n\t\t.then(data=> dispatch({type: REQUEST_ROBOTS_SUCCES, payload: data}))\n\t\t.catch(error=> dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCES = 'REQUEST_ROBOTS_SUCCES';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport {searchRobots, requestRobots} from './reducers';\n\nimport App from './containers/App.js';\n\nimport './index.css';\nimport 'tachyons' ;\n\nimport * as serviceWorker from './serviceWorker';\nconst rootReducer = combineReducers({searchRobots, requestRobots})\nconst logger = createLogger(); \n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware)); \n\n\nReactDOM.render(<Provider store={store}> \n\t\t\t\t\t\t\t\t\t<App />\n\t\t\t\t\t\t\t\t</Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}